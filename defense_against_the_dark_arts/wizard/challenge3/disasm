
challenge3.exe:     file format elf32-i386


Disassembly of section .init:

08048328 <_init>:
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	53                   	push   %ebx
 804832c:	83 ec 04             	sub    $0x4,%esp
 804832f:	e8 00 00 00 00       	call   8048334 <_init+0xc>
 8048334:	5b                   	pop    %ebx
 8048335:	81 c3 c0 1c 00 00    	add    $0x1cc0,%ebx
 804833b:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 8048341:	85 d2                	test   %edx,%edx
 8048343:	74 05                	je     804834a <_init+0x22>
 8048345:	e8 2e 00 00 00       	call   8048378 <__gmon_start__@plt>
 804834a:	e8 11 01 00 00       	call   8048460 <frame_dummy>
 804834f:	e8 7c 02 00 00       	call   80485d0 <__do_global_ctors_aux>
 8048354:	58                   	pop    %eax
 8048355:	5b                   	pop    %ebx
 8048356:	c9                   	leave  
 8048357:	c3                   	ret    

Disassembly of section .plt:

08048358 <getchar@plt-0x10>:
 8048358:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 804835e:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048364:	00 00                	add    %al,(%eax)
	...

08048368 <getchar@plt>:
 8048368:	ff 25 00 a0 04 08    	jmp    *0x804a000
 804836e:	68 00 00 00 00       	push   $0x0
 8048373:	e9 e0 ff ff ff       	jmp    8048358 <_init+0x30>

08048378 <__gmon_start__@plt>:
 8048378:	ff 25 04 a0 04 08    	jmp    *0x804a004
 804837e:	68 08 00 00 00       	push   $0x8
 8048383:	e9 d0 ff ff ff       	jmp    8048358 <_init+0x30>

08048388 <__libc_start_main@plt>:
 8048388:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804838e:	68 10 00 00 00       	push   $0x10
 8048393:	e9 c0 ff ff ff       	jmp    8048358 <_init+0x30>

08048398 <printf@plt>:
 8048398:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 804839e:	68 18 00 00 00       	push   $0x18
 80483a3:	e9 b0 ff ff ff       	jmp    8048358 <_init+0x30>

080483a8 <strcmp@plt>:
 80483a8:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483ae:	68 20 00 00 00       	push   $0x20
 80483b3:	e9 a0 ff ff ff       	jmp    8048358 <_init+0x30>

080483b8 <exit@plt>:
 80483b8:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483be:	68 28 00 00 00       	push   $0x28
 80483c3:	e9 90 ff ff ff       	jmp    8048358 <_init+0x30>

Disassembly of section .text:

080483d0 <_start>:
 80483d0:	31 ed                	xor    %ebp,%ebp
 80483d2:	5e                   	pop    %esi
 80483d3:	89 e1                	mov    %esp,%ecx
 80483d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483d8:	50                   	push   %eax
 80483d9:	54                   	push   %esp
 80483da:	52                   	push   %edx
 80483db:	68 60 85 04 08       	push   $0x8048560
 80483e0:	68 70 85 04 08       	push   $0x8048570
 80483e5:	51                   	push   %ecx
 80483e6:	56                   	push   %esi
 80483e7:	68 e2 84 04 08       	push   $0x80484e2
 80483ec:	e8 97 ff ff ff       	call   8048388 <__libc_start_main@plt>
 80483f1:	f4                   	hlt    
 80483f2:	90                   	nop
 80483f3:	90                   	nop
 80483f4:	90                   	nop
 80483f5:	90                   	nop
 80483f6:	90                   	nop
 80483f7:	90                   	nop
 80483f8:	90                   	nop
 80483f9:	90                   	nop
 80483fa:	90                   	nop
 80483fb:	90                   	nop
 80483fc:	90                   	nop
 80483fd:	90                   	nop
 80483fe:	90                   	nop
 80483ff:	90                   	nop

08048400 <__do_global_dtors_aux>:
 8048400:	55                   	push   %ebp
 8048401:	89 e5                	mov    %esp,%ebp
 8048403:	53                   	push   %ebx
 8048404:	83 ec 04             	sub    $0x4,%esp
 8048407:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 804840e:	75 3f                	jne    804844f <__do_global_dtors_aux+0x4f>
 8048410:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048415:	bb 18 9f 04 08       	mov    $0x8049f18,%ebx
 804841a:	81 eb 14 9f 04 08    	sub    $0x8049f14,%ebx
 8048420:	c1 fb 02             	sar    $0x2,%ebx
 8048423:	83 eb 01             	sub    $0x1,%ebx
 8048426:	39 d8                	cmp    %ebx,%eax
 8048428:	73 1e                	jae    8048448 <__do_global_dtors_aux+0x48>
 804842a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048430:	83 c0 01             	add    $0x1,%eax
 8048433:	a3 44 a0 04 08       	mov    %eax,0x804a044
 8048438:	ff 14 85 14 9f 04 08 	call   *0x8049f14(,%eax,4)
 804843f:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048444:	39 d8                	cmp    %ebx,%eax
 8048446:	72 e8                	jb     8048430 <__do_global_dtors_aux+0x30>
 8048448:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804844f:	83 c4 04             	add    $0x4,%esp
 8048452:	5b                   	pop    %ebx
 8048453:	5d                   	pop    %ebp
 8048454:	c3                   	ret    
 8048455:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048459:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048460 <frame_dummy>:
 8048460:	55                   	push   %ebp
 8048461:	89 e5                	mov    %esp,%ebp
 8048463:	83 ec 18             	sub    $0x18,%esp
 8048466:	a1 1c 9f 04 08       	mov    0x8049f1c,%eax
 804846b:	85 c0                	test   %eax,%eax
 804846d:	74 12                	je     8048481 <frame_dummy+0x21>
 804846f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048474:	85 c0                	test   %eax,%eax
 8048476:	74 09                	je     8048481 <frame_dummy+0x21>
 8048478:	c7 04 24 1c 9f 04 08 	movl   $0x8049f1c,(%esp)
 804847f:	ff d0                	call   *%eax
 8048481:	c9                   	leave  
 8048482:	c3                   	ret    
 8048483:	90                   	nop

08048484 <readString>:
 8048484:	55                   	push   %ebp
 8048485:	89 e5                	mov    %esp,%ebp
 8048487:	83 ec 78             	sub    $0x78,%esp
 804848a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8048491:	e8 d2 fe ff ff       	call   8048368 <getchar@plt>
 8048496:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048499:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 804849d:	74 16                	je     80484b5 <readString+0x31>
 804849f:	83 7d f4 0a          	cmpl   $0xa,-0xc(%ebp)
 80484a3:	74 10                	je     80484b5 <readString+0x31>
 80484a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80484a8:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484ab:	88 54 05 8e          	mov    %dl,-0x72(%ebp,%eax,1)
 80484af:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80484b3:	eb dc                	jmp    8048491 <readString+0xd>
 80484b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80484b8:	c6 44 05 8e 00       	movb   $0x0,-0x72(%ebp,%eax,1)
 80484bd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80484c4:	eb 14                	jmp    80484da <readString+0x56>
 80484c6:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80484c9:	03 45 08             	add    0x8(%ebp),%eax
 80484cc:	8b 55 f0             	mov    -0x10(%ebp),%edx
 80484cf:	0f b6 54 15 8e       	movzbl -0x72(%ebp,%edx,1),%edx
 80484d4:	88 10                	mov    %dl,(%eax)
 80484d6:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80484da:	83 7d f0 61          	cmpl   $0x61,-0x10(%ebp)
 80484de:	7e e6                	jle    80484c6 <readString+0x42>
 80484e0:	c9                   	leave  
 80484e1:	c3                   	ret    

080484e2 <main>:
 80484e2:	55                   	push   %ebp
 80484e3:	89 e5                	mov    %esp,%ebp
 80484e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80484e8:	83 ec 10             	sub    $0x10,%esp
 80484eb:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 80484f2:	e8 8d ff ff ff       	call   8048484 <readString>
 80484f7:	c7 44 24 04 20 86 04 	movl   $0x8048620,0x4(%esp)
 80484fe:	08 
 80484ff:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048506:	e8 9d fe ff ff       	call   80483a8 <strcmp@plt>
 804850b:	85 c0                	test   %eax,%eax
 804850d:	75 07                	jne    8048516 <main+0x34>
 804850f:	c6 05 20 a0 04 08 41 	movb   $0x41,0x804a020
 8048516:	b8 33 86 04 08       	mov    $0x8048633,%eax
 804851b:	c7 44 24 04 60 a0 04 	movl   $0x804a060,0x4(%esp)
 8048522:	08 
 8048523:	89 04 24             	mov    %eax,(%esp)
 8048526:	e8 6d fe ff ff       	call   8048398 <printf@plt>
 804852b:	0f b6 05 20 a0 04 08 	movzbl 0x804a020,%eax
 8048532:	0f be d0             	movsbl %al,%edx
 8048535:	b8 44 86 04 08       	mov    $0x8048644,%eax
 804853a:	89 54 24 04          	mov    %edx,0x4(%esp)
 804853e:	89 04 24             	mov    %eax,(%esp)
 8048541:	e8 52 fe ff ff       	call   8048398 <printf@plt>
 8048546:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 804854d:	e8 66 fe ff ff       	call   80483b8 <exit@plt>
 8048552:	90                   	nop
 8048553:	90                   	nop
 8048554:	90                   	nop
 8048555:	90                   	nop
 8048556:	90                   	nop
 8048557:	90                   	nop
 8048558:	90                   	nop
 8048559:	90                   	nop
 804855a:	90                   	nop
 804855b:	90                   	nop
 804855c:	90                   	nop
 804855d:	90                   	nop
 804855e:	90                   	nop
 804855f:	90                   	nop

08048560 <__libc_csu_fini>:
 8048560:	55                   	push   %ebp
 8048561:	89 e5                	mov    %esp,%ebp
 8048563:	5d                   	pop    %ebp
 8048564:	c3                   	ret    
 8048565:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048569:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048570 <__libc_csu_init>:
 8048570:	55                   	push   %ebp
 8048571:	89 e5                	mov    %esp,%ebp
 8048573:	57                   	push   %edi
 8048574:	56                   	push   %esi
 8048575:	53                   	push   %ebx
 8048576:	e8 4f 00 00 00       	call   80485ca <__i686.get_pc_thunk.bx>
 804857b:	81 c3 79 1a 00 00    	add    $0x1a79,%ebx
 8048581:	83 ec 1c             	sub    $0x1c,%esp
 8048584:	e8 9f fd ff ff       	call   8048328 <_init>
 8048589:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 804858f:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 8048595:	29 c7                	sub    %eax,%edi
 8048597:	c1 ff 02             	sar    $0x2,%edi
 804859a:	85 ff                	test   %edi,%edi
 804859c:	74 24                	je     80485c2 <__libc_csu_init+0x52>
 804859e:	31 f6                	xor    %esi,%esi
 80485a0:	8b 45 10             	mov    0x10(%ebp),%eax
 80485a3:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485a7:	8b 45 0c             	mov    0xc(%ebp),%eax
 80485aa:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485ae:	8b 45 08             	mov    0x8(%ebp),%eax
 80485b1:	89 04 24             	mov    %eax,(%esp)
 80485b4:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 80485bb:	83 c6 01             	add    $0x1,%esi
 80485be:	39 fe                	cmp    %edi,%esi
 80485c0:	72 de                	jb     80485a0 <__libc_csu_init+0x30>
 80485c2:	83 c4 1c             	add    $0x1c,%esp
 80485c5:	5b                   	pop    %ebx
 80485c6:	5e                   	pop    %esi
 80485c7:	5f                   	pop    %edi
 80485c8:	5d                   	pop    %ebp
 80485c9:	c3                   	ret    

080485ca <__i686.get_pc_thunk.bx>:
 80485ca:	8b 1c 24             	mov    (%esp),%ebx
 80485cd:	c3                   	ret    
 80485ce:	90                   	nop
 80485cf:	90                   	nop

080485d0 <__do_global_ctors_aux>:
 80485d0:	55                   	push   %ebp
 80485d1:	89 e5                	mov    %esp,%ebp
 80485d3:	53                   	push   %ebx
 80485d4:	83 ec 04             	sub    $0x4,%esp
 80485d7:	a1 0c 9f 04 08       	mov    0x8049f0c,%eax
 80485dc:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485df:	74 13                	je     80485f4 <__do_global_ctors_aux+0x24>
 80485e1:	bb 0c 9f 04 08       	mov    $0x8049f0c,%ebx
 80485e6:	66 90                	xchg   %ax,%ax
 80485e8:	83 eb 04             	sub    $0x4,%ebx
 80485eb:	ff d0                	call   *%eax
 80485ed:	8b 03                	mov    (%ebx),%eax
 80485ef:	83 f8 ff             	cmp    $0xffffffff,%eax
 80485f2:	75 f4                	jne    80485e8 <__do_global_ctors_aux+0x18>
 80485f4:	83 c4 04             	add    $0x4,%esp
 80485f7:	5b                   	pop    %ebx
 80485f8:	5d                   	pop    %ebp
 80485f9:	c3                   	ret    
 80485fa:	90                   	nop
 80485fb:	90                   	nop

Disassembly of section .fini:

080485fc <_fini>:
 80485fc:	55                   	push   %ebp
 80485fd:	89 e5                	mov    %esp,%ebp
 80485ff:	53                   	push   %ebx
 8048600:	83 ec 04             	sub    $0x4,%esp
 8048603:	e8 00 00 00 00       	call   8048608 <_fini+0xc>
 8048608:	5b                   	pop    %ebx
 8048609:	81 c3 ec 19 00 00    	add    $0x19ec,%ebx
 804860f:	e8 ec fd ff ff       	call   8048400 <__do_global_dtors_aux>
 8048614:	59                   	pop    %ecx
 8048615:	5b                   	pop    %ebx
 8048616:	c9                   	leave  
 8048617:	c3                   	ret    
