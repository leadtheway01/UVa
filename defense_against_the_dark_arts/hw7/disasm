
./dumbledore_easy.exe:     file format elf32-i386


Disassembly of section .init:

08048330 <_init>:
 8048330:	53                   	push   %ebx
 8048331:	83 ec 08             	sub    $0x8,%esp
 8048334:	e8 d7 00 00 00       	call   8048410 <__x86.get_pc_thunk.bx>
 8048339:	81 c3 c7 1c 00 00    	add    $0x1cc7,%ebx
 804833f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048345:	85 c0                	test   %eax,%eax
 8048347:	74 05                	je     804834e <_init+0x1e>
 8048349:	e8 82 00 00 00       	call   80483d0 <__libc_start_main@plt+0x10>
 804834e:	83 c4 08             	add    $0x8,%esp
 8048351:	5b                   	pop    %ebx
 8048352:	c3                   	ret    

Disassembly of section .plt:

08048360 <strcmp@plt-0x10>:
 8048360:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048366:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804836c:	00 00                	add    %al,(%eax)
	...

08048370 <strcmp@plt>:
 8048370:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048376:	68 00 00 00 00       	push   $0x0
 804837b:	e9 e0 ff ff ff       	jmp    8048360 <_init+0x30>

08048380 <mprotect@plt>:
 8048380:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048386:	68 08 00 00 00       	push   $0x8
 804838b:	e9 d0 ff ff ff       	jmp    8048360 <_init+0x30>

08048390 <printf@plt>:
 8048390:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048396:	68 10 00 00 00       	push   $0x10
 804839b:	e9 c0 ff ff ff       	jmp    8048360 <_init+0x30>

080483a0 <getchar@plt>:
 80483a0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483a6:	68 18 00 00 00       	push   $0x18
 80483ab:	e9 b0 ff ff ff       	jmp    8048360 <_init+0x30>

080483b0 <exit@plt>:
 80483b0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483b6:	68 20 00 00 00       	push   $0x20
 80483bb:	e9 a0 ff ff ff       	jmp    8048360 <_init+0x30>

080483c0 <__libc_start_main@plt>:
 80483c0:	ff 25 20 a0 04 08    	jmp    *0x804a020
 80483c6:	68 28 00 00 00       	push   $0x28
 80483cb:	e9 90 ff ff ff       	jmp    8048360 <_init+0x30>

Disassembly of section .plt.got:

080483d0 <.plt.got>:
 80483d0:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80483d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080483e0 <_start>:
 80483e0:	31 ed                	xor    %ebp,%ebp
 80483e2:	5e                   	pop    %esi
 80483e3:	89 e1                	mov    %esp,%ecx
 80483e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e8:	50                   	push   %eax
 80483e9:	54                   	push   %esp
 80483ea:	52                   	push   %edx
 80483eb:	68 50 86 04 08       	push   $0x8048650
 80483f0:	68 f0 85 04 08       	push   $0x80485f0
 80483f5:	51                   	push   %ecx
 80483f6:	56                   	push   %esi
 80483f7:	68 58 85 04 08       	push   $0x8048558
 80483fc:	e8 bf ff ff ff       	call   80483c0 <__libc_start_main@plt>
 8048401:	f4                   	hlt    
 8048402:	66 90                	xchg   %ax,%ax
 8048404:	66 90                	xchg   %ax,%ax
 8048406:	66 90                	xchg   %ax,%ax
 8048408:	66 90                	xchg   %ax,%ax
 804840a:	66 90                	xchg   %ax,%ax
 804840c:	66 90                	xchg   %ax,%ax
 804840e:	66 90                	xchg   %ax,%ax

08048410 <__x86.get_pc_thunk.bx>:
 8048410:	8b 1c 24             	mov    (%esp),%ebx
 8048413:	c3                   	ret    
 8048414:	66 90                	xchg   %ax,%ax
 8048416:	66 90                	xchg   %ax,%ax
 8048418:	66 90                	xchg   %ax,%ax
 804841a:	66 90                	xchg   %ax,%ax
 804841c:	66 90                	xchg   %ax,%ax
 804841e:	66 90                	xchg   %ax,%ax

08048420 <deregister_tm_clones>:
 8048420:	b8 33 a0 04 08       	mov    $0x804a033,%eax
 8048425:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804842a:	83 f8 06             	cmp    $0x6,%eax
 804842d:	76 1a                	jbe    8048449 <deregister_tm_clones+0x29>
 804842f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048434:	85 c0                	test   %eax,%eax
 8048436:	74 11                	je     8048449 <deregister_tm_clones+0x29>
 8048438:	55                   	push   %ebp
 8048439:	89 e5                	mov    %esp,%ebp
 804843b:	83 ec 14             	sub    $0x14,%esp
 804843e:	68 30 a0 04 08       	push   $0x804a030
 8048443:	ff d0                	call   *%eax
 8048445:	83 c4 10             	add    $0x10,%esp
 8048448:	c9                   	leave  
 8048449:	f3 c3                	repz ret 
 804844b:	90                   	nop
 804844c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048450 <register_tm_clones>:
 8048450:	b8 30 a0 04 08       	mov    $0x804a030,%eax
 8048455:	2d 30 a0 04 08       	sub    $0x804a030,%eax
 804845a:	c1 f8 02             	sar    $0x2,%eax
 804845d:	89 c2                	mov    %eax,%edx
 804845f:	c1 ea 1f             	shr    $0x1f,%edx
 8048462:	01 d0                	add    %edx,%eax
 8048464:	d1 f8                	sar    %eax
 8048466:	74 1b                	je     8048483 <register_tm_clones+0x33>
 8048468:	ba 00 00 00 00       	mov    $0x0,%edx
 804846d:	85 d2                	test   %edx,%edx
 804846f:	74 12                	je     8048483 <register_tm_clones+0x33>
 8048471:	55                   	push   %ebp
 8048472:	89 e5                	mov    %esp,%ebp
 8048474:	83 ec 10             	sub    $0x10,%esp
 8048477:	50                   	push   %eax
 8048478:	68 30 a0 04 08       	push   $0x804a030
 804847d:	ff d2                	call   *%edx
 804847f:	83 c4 10             	add    $0x10,%esp
 8048482:	c9                   	leave  
 8048483:	f3 c3                	repz ret 
 8048485:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048489:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048490 <__do_global_dtors_aux>:
 8048490:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 8048497:	75 13                	jne    80484ac <__do_global_dtors_aux+0x1c>
 8048499:	55                   	push   %ebp
 804849a:	89 e5                	mov    %esp,%ebp
 804849c:	83 ec 08             	sub    $0x8,%esp
 804849f:	e8 7c ff ff ff       	call   8048420 <deregister_tm_clones>
 80484a4:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 80484ab:	c9                   	leave  
 80484ac:	f3 c3                	repz ret 
 80484ae:	66 90                	xchg   %ax,%ax

080484b0 <frame_dummy>:
 80484b0:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 80484b5:	8b 10                	mov    (%eax),%edx
 80484b7:	85 d2                	test   %edx,%edx
 80484b9:	75 05                	jne    80484c0 <frame_dummy+0x10>
 80484bb:	eb 93                	jmp    8048450 <register_tm_clones>
 80484bd:	8d 76 00             	lea    0x0(%esi),%esi
 80484c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80484c5:	85 d2                	test   %edx,%edx
 80484c7:	74 f2                	je     80484bb <frame_dummy+0xb>
 80484c9:	55                   	push   %ebp
 80484ca:	89 e5                	mov    %esp,%ebp
 80484cc:	83 ec 14             	sub    $0x14,%esp
 80484cf:	50                   	push   %eax
 80484d0:	ff d2                	call   *%edx
 80484d2:	83 c4 10             	add    $0x10,%esp
 80484d5:	c9                   	leave  
 80484d6:	e9 75 ff ff ff       	jmp    8048450 <register_tm_clones>

080484db <readString>:
 80484db:	55                   	push   %ebp
 80484dc:	89 e5                	mov    %esp,%ebp
 80484de:	83 ec 78             	sub    $0x78,%esp
 80484e1:	e8 ba fe ff ff       	call   80483a0 <getchar@plt>
 80484e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80484e9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 80484ed:	74 21                	je     8048510 <readString+0x35>
 80484ef:	83 7d f4 0a          	cmpl   $0xa,-0xc(%ebp)
 80484f3:	74 1b                	je     8048510 <readString+0x35>
 80484f5:	a1 44 a0 04 08       	mov    0x804a044,%eax
 80484fa:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484fd:	88 54 05 92          	mov    %dl,-0x6e(%ebp,%eax,1)
 8048501:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048506:	83 c0 01             	add    $0x1,%eax
 8048509:	a3 44 a0 04 08       	mov    %eax,0x804a044
 804850e:	eb d1                	jmp    80484e1 <readString+0x6>
 8048510:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048515:	c6 44 05 92 00       	movb   $0x0,-0x6e(%ebp,%eax,1)
 804851a:	c7 05 44 a0 04 08 00 	movl   $0x0,0x804a044
 8048521:	00 00 00 
 8048524:	eb 25                	jmp    804854b <readString+0x70>
 8048526:	a1 44 a0 04 08       	mov    0x804a044,%eax
 804852b:	89 c2                	mov    %eax,%edx
 804852d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048530:	01 c2                	add    %eax,%edx
 8048532:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048537:	0f b6 44 05 92       	movzbl -0x6e(%ebp,%eax,1),%eax
 804853c:	88 02                	mov    %al,(%edx)
 804853e:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048543:	83 c0 01             	add    $0x1,%eax
 8048546:	a3 44 a0 04 08       	mov    %eax,0x804a044
 804854b:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048550:	83 f8 61             	cmp    $0x61,%eax
 8048553:	7e d1                	jle    8048526 <readString+0x4b>
 8048555:	90                   	nop
 8048556:	c9                   	leave  
 8048557:	c3                   	ret    

08048558 <main>:
 8048558:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804855c:	83 e4 f0             	and    $0xfffffff0,%esp
 804855f:	ff 71 fc             	pushl  -0x4(%ecx)
 8048562:	55                   	push   %ebp
 8048563:	89 e5                	mov    %esp,%ebp
 8048565:	51                   	push   %ecx
 8048566:	83 ec 04             	sub    $0x4,%esp
 8048569:	83 ec 04             	sub    $0x4,%esp
 804856c:	6a 07                	push   $0x7
 804856e:	6a 01                	push   $0x1
 8048570:	68 80 a0 04 08       	push   $0x804a080
 8048575:	e8 06 fe ff ff       	call   8048380 <mprotect@plt>
 804857a:	83 c4 10             	add    $0x10,%esp
 804857d:	83 ec 0c             	sub    $0xc,%esp
 8048580:	68 80 a0 04 08       	push   $0x804a080
 8048585:	e8 51 ff ff ff       	call   80484db <readString>
 804858a:	83 c4 10             	add    $0x10,%esp
 804858d:	83 ec 08             	sub    $0x8,%esp
 8048590:	68 70 86 04 08       	push   $0x8048670
 8048595:	68 80 a0 04 08       	push   $0x804a080
 804859a:	e8 d1 fd ff ff       	call   8048370 <strcmp@plt>
 804859f:	83 c4 10             	add    $0x10,%esp
 80485a2:	85 c0                	test   %eax,%eax
 80485a4:	75 07                	jne    80485ad <main+0x55>
 80485a6:	c6 05 2c a0 04 08 41 	movb   $0x41,0x804a02c
 80485ad:	83 ec 08             	sub    $0x8,%esp
 80485b0:	68 80 a0 04 08       	push   $0x804a080
 80485b5:	68 83 86 04 08       	push   $0x8048683
 80485ba:	e8 d1 fd ff ff       	call   8048390 <printf@plt>
 80485bf:	83 c4 10             	add    $0x10,%esp
 80485c2:	0f b6 05 2c a0 04 08 	movzbl 0x804a02c,%eax
 80485c9:	0f be c0             	movsbl %al,%eax
 80485cc:	83 ec 08             	sub    $0x8,%esp
 80485cf:	50                   	push   %eax
 80485d0:	68 94 86 04 08       	push   $0x8048694
 80485d5:	e8 b6 fd ff ff       	call   8048390 <printf@plt>
 80485da:	83 c4 10             	add    $0x10,%esp
 80485dd:	83 ec 0c             	sub    $0xc,%esp
 80485e0:	6a 00                	push   $0x0
 80485e2:	e8 c9 fd ff ff       	call   80483b0 <exit@plt>
 80485e7:	66 90                	xchg   %ax,%ax
 80485e9:	66 90                	xchg   %ax,%ax
 80485eb:	66 90                	xchg   %ax,%ax
 80485ed:	66 90                	xchg   %ax,%ax
 80485ef:	90                   	nop

080485f0 <__libc_csu_init>:
 80485f0:	55                   	push   %ebp
 80485f1:	57                   	push   %edi
 80485f2:	56                   	push   %esi
 80485f3:	53                   	push   %ebx
 80485f4:	e8 17 fe ff ff       	call   8048410 <__x86.get_pc_thunk.bx>
 80485f9:	81 c3 07 1a 00 00    	add    $0x1a07,%ebx
 80485ff:	83 ec 0c             	sub    $0xc,%esp
 8048602:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048606:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804860c:	e8 1f fd ff ff       	call   8048330 <_init>
 8048611:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048617:	29 c6                	sub    %eax,%esi
 8048619:	c1 fe 02             	sar    $0x2,%esi
 804861c:	85 f6                	test   %esi,%esi
 804861e:	74 25                	je     8048645 <__libc_csu_init+0x55>
 8048620:	31 ff                	xor    %edi,%edi
 8048622:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048628:	83 ec 04             	sub    $0x4,%esp
 804862b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804862f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048633:	55                   	push   %ebp
 8048634:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804863b:	83 c7 01             	add    $0x1,%edi
 804863e:	83 c4 10             	add    $0x10,%esp
 8048641:	39 f7                	cmp    %esi,%edi
 8048643:	75 e3                	jne    8048628 <__libc_csu_init+0x38>
 8048645:	83 c4 0c             	add    $0xc,%esp
 8048648:	5b                   	pop    %ebx
 8048649:	5e                   	pop    %esi
 804864a:	5f                   	pop    %edi
 804864b:	5d                   	pop    %ebp
 804864c:	c3                   	ret    
 804864d:	8d 76 00             	lea    0x0(%esi),%esi

08048650 <__libc_csu_fini>:
 8048650:	f3 c3                	repz ret 

Disassembly of section .fini:

08048654 <_fini>:
 8048654:	53                   	push   %ebx
 8048655:	83 ec 08             	sub    $0x8,%esp
 8048658:	e8 b3 fd ff ff       	call   8048410 <__x86.get_pc_thunk.bx>
 804865d:	81 c3 a3 19 00 00    	add    $0x19a3,%ebx
 8048663:	83 c4 08             	add    $0x8,%esp
 8048666:	5b                   	pop    %ebx
 8048667:	c3                   	ret    
