
dumbledore.exe:     file format elf32-i386


Disassembly of section .init:

08048350 <_init>:
 8048350:	55                   	push   %ebp
 8048351:	89 e5                	mov    %esp,%ebp
 8048353:	53                   	push   %ebx
 8048354:	83 ec 04             	sub    $0x4,%esp
 8048357:	e8 00 00 00 00       	call   804835c <_init+0xc>
 804835c:	5b                   	pop    %ebx
 804835d:	81 c3 98 1c 00 00    	add    $0x1c98,%ebx
 8048363:	8b 93 fc ff ff ff    	mov    -0x4(%ebx),%edx
 8048369:	85 d2                	test   %edx,%edx
 804836b:	74 05                	je     8048372 <_init+0x22>
 804836d:	e8 2e 00 00 00       	call   80483a0 <__gmon_start__@plt>
 8048372:	e8 19 01 00 00       	call   8048490 <frame_dummy>
 8048377:	e8 b4 02 00 00       	call   8048630 <__do_global_ctors_aux>
 804837c:	58                   	pop    %eax
 804837d:	5b                   	pop    %ebx
 804837e:	c9                   	leave  
 804837f:	c3                   	ret    

Disassembly of section .plt:

08048380 <getchar@plt-0x10>:
 8048380:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 8048386:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 804838c:	00 00                	add    %al,(%eax)
	...

08048390 <getchar@plt>:
 8048390:	ff 25 00 a0 04 08    	jmp    *0x804a000
 8048396:	68 00 00 00 00       	push   $0x0
 804839b:	e9 e0 ff ff ff       	jmp    8048380 <_init+0x30>

080483a0 <__gmon_start__@plt>:
 80483a0:	ff 25 04 a0 04 08    	jmp    *0x804a004
 80483a6:	68 08 00 00 00       	push   $0x8
 80483ab:	e9 d0 ff ff ff       	jmp    8048380 <_init+0x30>

080483b0 <__libc_start_main@plt>:
 80483b0:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483b6:	68 10 00 00 00       	push   $0x10
 80483bb:	e9 c0 ff ff ff       	jmp    8048380 <_init+0x30>

080483c0 <mprotect@plt>:
 80483c0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483c6:	68 18 00 00 00       	push   $0x18
 80483cb:	e9 b0 ff ff ff       	jmp    8048380 <_init+0x30>

080483d0 <printf@plt>:
 80483d0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483d6:	68 20 00 00 00       	push   $0x20
 80483db:	e9 a0 ff ff ff       	jmp    8048380 <_init+0x30>

080483e0 <strcmp@plt>:
 80483e0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483e6:	68 28 00 00 00       	push   $0x28
 80483eb:	e9 90 ff ff ff       	jmp    8048380 <_init+0x30>

080483f0 <exit@plt>:
 80483f0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483f6:	68 30 00 00 00       	push   $0x30
 80483fb:	e9 80 ff ff ff       	jmp    8048380 <_init+0x30>

Disassembly of section .text:

08048400 <_start>:
 8048400:	31 ed                	xor    %ebp,%ebp
 8048402:	5e                   	pop    %esi
 8048403:	89 e1                	mov    %esp,%ecx
 8048405:	83 e4 f0             	and    $0xfffffff0,%esp
 8048408:	50                   	push   %eax
 8048409:	54                   	push   %esp
 804840a:	52                   	push   %edx
 804840b:	68 c0 85 04 08       	push   $0x80485c0
 8048410:	68 d0 85 04 08       	push   $0x80485d0
 8048415:	51                   	push   %ecx
 8048416:	56                   	push   %esi
 8048417:	68 2d 85 04 08       	push   $0x804852d
 804841c:	e8 8f ff ff ff       	call   80483b0 <__libc_start_main@plt>
 8048421:	f4                   	hlt    
 8048422:	90                   	nop
 8048423:	90                   	nop
 8048424:	90                   	nop
 8048425:	90                   	nop
 8048426:	90                   	nop
 8048427:	90                   	nop
 8048428:	90                   	nop
 8048429:	90                   	nop
 804842a:	90                   	nop
 804842b:	90                   	nop
 804842c:	90                   	nop
 804842d:	90                   	nop
 804842e:	90                   	nop
 804842f:	90                   	nop

08048430 <__do_global_dtors_aux>:
 8048430:	55                   	push   %ebp
 8048431:	89 e5                	mov    %esp,%ebp
 8048433:	53                   	push   %ebx
 8048434:	83 ec 04             	sub    $0x4,%esp
 8048437:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 804843e:	75 3f                	jne    804847f <__do_global_dtors_aux+0x4f>
 8048440:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048445:	bb 18 9f 04 08       	mov    $0x8049f18,%ebx
 804844a:	81 eb 14 9f 04 08    	sub    $0x8049f14,%ebx
 8048450:	c1 fb 02             	sar    $0x2,%ebx
 8048453:	83 eb 01             	sub    $0x1,%ebx
 8048456:	39 d8                	cmp    %ebx,%eax
 8048458:	73 1e                	jae    8048478 <__do_global_dtors_aux+0x48>
 804845a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048460:	83 c0 01             	add    $0x1,%eax
 8048463:	a3 44 a0 04 08       	mov    %eax,0x804a044
 8048468:	ff 14 85 14 9f 04 08 	call   *0x8049f14(,%eax,4)
 804846f:	a1 44 a0 04 08       	mov    0x804a044,%eax
 8048474:	39 d8                	cmp    %ebx,%eax
 8048476:	72 e8                	jb     8048460 <__do_global_dtors_aux+0x30>
 8048478:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804847f:	83 c4 04             	add    $0x4,%esp
 8048482:	5b                   	pop    %ebx
 8048483:	5d                   	pop    %ebp
 8048484:	c3                   	ret    
 8048485:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048489:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048490 <frame_dummy>:
 8048490:	55                   	push   %ebp
 8048491:	89 e5                	mov    %esp,%ebp
 8048493:	83 ec 18             	sub    $0x18,%esp
 8048496:	a1 1c 9f 04 08       	mov    0x8049f1c,%eax
 804849b:	85 c0                	test   %eax,%eax
 804849d:	74 12                	je     80484b1 <frame_dummy+0x21>
 804849f:	b8 00 00 00 00       	mov    $0x0,%eax
 80484a4:	85 c0                	test   %eax,%eax
 80484a6:	74 09                	je     80484b1 <frame_dummy+0x21>
 80484a8:	c7 04 24 1c 9f 04 08 	movl   $0x8049f1c,(%esp)
 80484af:	ff d0                	call   *%eax
 80484b1:	c9                   	leave  
 80484b2:	c3                   	ret    
 80484b3:	90                   	nop

080484b4 <readString>:
 80484b4:	55                   	push   %ebp
 80484b5:	89 e5                	mov    %esp,%ebp
 80484b7:	83 ec 78             	sub    $0x78,%esp
 80484ba:	e8 d1 fe ff ff       	call   8048390 <getchar@plt>
 80484bf:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80484c2:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
 80484c6:	74 21                	je     80484e9 <readString+0x35>
 80484c8:	83 7d f4 0a          	cmpl   $0xa,-0xc(%ebp)
 80484cc:	74 1b                	je     80484e9 <readString+0x35>
 80484ce:	a1 48 a0 04 08       	mov    0x804a048,%eax
 80484d3:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484d6:	88 54 05 92          	mov    %dl,-0x6e(%ebp,%eax,1)
 80484da:	a1 48 a0 04 08       	mov    0x804a048,%eax
 80484df:	83 c0 01             	add    $0x1,%eax
 80484e2:	a3 48 a0 04 08       	mov    %eax,0x804a048
 80484e7:	eb d1                	jmp    80484ba <readString+0x6>
 80484e9:	a1 48 a0 04 08       	mov    0x804a048,%eax
 80484ee:	c6 44 05 92 00       	movb   $0x0,-0x6e(%ebp,%eax,1)
 80484f3:	c7 05 48 a0 04 08 00 	movl   $0x0,0x804a048
 80484fa:	00 00 00 
 80484fd:	eb 22                	jmp    8048521 <readString+0x6d>
 80484ff:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048504:	03 45 08             	add    0x8(%ebp),%eax
 8048507:	8b 15 48 a0 04 08    	mov    0x804a048,%edx
 804850d:	0f b6 54 15 92       	movzbl -0x6e(%ebp,%edx,1),%edx
 8048512:	88 10                	mov    %dl,(%eax)
 8048514:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048519:	83 c0 01             	add    $0x1,%eax
 804851c:	a3 48 a0 04 08       	mov    %eax,0x804a048
 8048521:	a1 48 a0 04 08       	mov    0x804a048,%eax
 8048526:	83 f8 61             	cmp    $0x61,%eax
 8048529:	7e d4                	jle    80484ff <readString+0x4b>
 804852b:	c9                   	leave  
 804852c:	c3                   	ret    

0804852d <main>:
 804852d:	55                   	push   %ebp
 804852e:	89 e5                	mov    %esp,%ebp
 8048530:	83 e4 f0             	and    $0xfffffff0,%esp
 8048533:	83 ec 10             	sub    $0x10,%esp
 8048536:	b8 60 a0 04 08       	mov    $0x804a060,%eax
 804853b:	25 00 f0 ff ff       	and    $0xfffff000,%eax
 8048540:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)
 8048547:	00 
 8048548:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 804854f:	00 
 8048550:	89 04 24             	mov    %eax,(%esp)
 8048553:	e8 68 fe ff ff       	call   80483c0 <mprotect@plt>
 8048558:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 804855f:	e8 50 ff ff ff       	call   80484b4 <readString>
 8048564:	c7 44 24 04 80 86 04 	movl   $0x8048680,0x4(%esp)
 804856b:	08 
 804856c:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 8048573:	e8 68 fe ff ff       	call   80483e0 <strcmp@plt>
 8048578:	85 c0                	test   %eax,%eax
 804857a:	75 07                	jne    8048583 <main+0x56>
 804857c:	c6 05 24 a0 04 08 41 	movb   $0x41,0x804a024
 8048583:	b8 93 86 04 08       	mov    $0x8048693,%eax
 8048588:	c7 44 24 04 60 a0 04 	movl   $0x804a060,0x4(%esp)
 804858f:	08 
 8048590:	89 04 24             	mov    %eax,(%esp)
 8048593:	e8 38 fe ff ff       	call   80483d0 <printf@plt>
 8048598:	0f b6 05 24 a0 04 08 	movzbl 0x804a024,%eax
 804859f:	0f be d0             	movsbl %al,%edx
 80485a2:	b8 a4 86 04 08       	mov    $0x80486a4,%eax
 80485a7:	89 54 24 04          	mov    %edx,0x4(%esp)
 80485ab:	89 04 24             	mov    %eax,(%esp)
 80485ae:	e8 1d fe ff ff       	call   80483d0 <printf@plt>
 80485b3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80485ba:	e8 31 fe ff ff       	call   80483f0 <exit@plt>
 80485bf:	90                   	nop

080485c0 <__libc_csu_fini>:
 80485c0:	55                   	push   %ebp
 80485c1:	89 e5                	mov    %esp,%ebp
 80485c3:	5d                   	pop    %ebp
 80485c4:	c3                   	ret    
 80485c5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80485c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080485d0 <__libc_csu_init>:
 80485d0:	55                   	push   %ebp
 80485d1:	89 e5                	mov    %esp,%ebp
 80485d3:	57                   	push   %edi
 80485d4:	56                   	push   %esi
 80485d5:	53                   	push   %ebx
 80485d6:	e8 4f 00 00 00       	call   804862a <__i686.get_pc_thunk.bx>
 80485db:	81 c3 19 1a 00 00    	add    $0x1a19,%ebx
 80485e1:	83 ec 1c             	sub    $0x1c,%esp
 80485e4:	e8 67 fd ff ff       	call   8048350 <_init>
 80485e9:	8d bb 18 ff ff ff    	lea    -0xe8(%ebx),%edi
 80485ef:	8d 83 18 ff ff ff    	lea    -0xe8(%ebx),%eax
 80485f5:	29 c7                	sub    %eax,%edi
 80485f7:	c1 ff 02             	sar    $0x2,%edi
 80485fa:	85 ff                	test   %edi,%edi
 80485fc:	74 24                	je     8048622 <__libc_csu_init+0x52>
 80485fe:	31 f6                	xor    %esi,%esi
 8048600:	8b 45 10             	mov    0x10(%ebp),%eax
 8048603:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048607:	8b 45 0c             	mov    0xc(%ebp),%eax
 804860a:	89 44 24 04          	mov    %eax,0x4(%esp)
 804860e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048611:	89 04 24             	mov    %eax,(%esp)
 8048614:	ff 94 b3 18 ff ff ff 	call   *-0xe8(%ebx,%esi,4)
 804861b:	83 c6 01             	add    $0x1,%esi
 804861e:	39 fe                	cmp    %edi,%esi
 8048620:	72 de                	jb     8048600 <__libc_csu_init+0x30>
 8048622:	83 c4 1c             	add    $0x1c,%esp
 8048625:	5b                   	pop    %ebx
 8048626:	5e                   	pop    %esi
 8048627:	5f                   	pop    %edi
 8048628:	5d                   	pop    %ebp
 8048629:	c3                   	ret    

0804862a <__i686.get_pc_thunk.bx>:
 804862a:	8b 1c 24             	mov    (%esp),%ebx
 804862d:	c3                   	ret    
 804862e:	90                   	nop
 804862f:	90                   	nop

08048630 <__do_global_ctors_aux>:
 8048630:	55                   	push   %ebp
 8048631:	89 e5                	mov    %esp,%ebp
 8048633:	53                   	push   %ebx
 8048634:	83 ec 04             	sub    $0x4,%esp
 8048637:	a1 0c 9f 04 08       	mov    0x8049f0c,%eax
 804863c:	83 f8 ff             	cmp    $0xffffffff,%eax
 804863f:	74 13                	je     8048654 <__do_global_ctors_aux+0x24>
 8048641:	bb 0c 9f 04 08       	mov    $0x8049f0c,%ebx
 8048646:	66 90                	xchg   %ax,%ax
 8048648:	83 eb 04             	sub    $0x4,%ebx
 804864b:	ff d0                	call   *%eax
 804864d:	8b 03                	mov    (%ebx),%eax
 804864f:	83 f8 ff             	cmp    $0xffffffff,%eax
 8048652:	75 f4                	jne    8048648 <__do_global_ctors_aux+0x18>
 8048654:	83 c4 04             	add    $0x4,%esp
 8048657:	5b                   	pop    %ebx
 8048658:	5d                   	pop    %ebp
 8048659:	c3                   	ret    
 804865a:	90                   	nop
 804865b:	90                   	nop

Disassembly of section .fini:

0804865c <_fini>:
 804865c:	55                   	push   %ebp
 804865d:	89 e5                	mov    %esp,%ebp
 804865f:	53                   	push   %ebx
 8048660:	83 ec 04             	sub    $0x4,%esp
 8048663:	e8 00 00 00 00       	call   8048668 <_fini+0xc>
 8048668:	5b                   	pop    %ebx
 8048669:	81 c3 8c 19 00 00    	add    $0x198c,%ebx
 804866f:	e8 bc fd ff ff       	call   8048430 <__do_global_dtors_aux>
 8048674:	59                   	pop    %ecx
 8048675:	5b                   	pop    %ebx
 8048676:	c9                   	leave  
 8048677:	c3                   	ret    
