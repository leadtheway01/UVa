#Wright Kim
#wdk7bj
#Makefile


# Defines the C++ compiler we'll be using
CXX	= clang++

# Defines the flags we'll be passing to the C++ compiler
CXXFLAGS	= -Wall -g


# All of the .o files for our program
OFILES	= huffmandec.o dheap.o dnode.o
OFILES1 = huffmanenc.o heap.o node.o

# This tells make to create a .o file from a .cpp file, using the
# defaults above (i.e. the CXX and CXXFLAGS macros)
.SUFFIXES: .o .cpp

all: huffmandec huffmanenc
# How to compile our final program.  Note that we do NOT specify an
# output executable name -- in order for this to work with the grading
# system, the file needs to be a.out (a.exe in Cygwin).
huffmandec:$(OFILES)
	$(CXX) $(CXXFLAGS) -o decoder $(OFILES)

huffmanenc:$(OFILES1)
	$(CXX) $(CXXFLAGS) -o encoder $(OFILES1)



# This will clean up (remove) all our object files.  The -f option
# tells rm to forcily remove the files (i.e. don't ask if they should
# be removed or not).  This removes object files (*.o) and Emacs
# backup files (*~)
clean:
	/bin/rm -f *.o *~

